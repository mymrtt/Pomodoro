{"ast":null,"code":"// Libs\nimport { compose, createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // Reducers\n\nimport addTasks from './modules/addTasks-module';\nconst reducers = combineReducers({\n  tasks: addTasks\n});\nexport default function configureStore(initialState) {\n  const bundle = compose(applyMiddleware(thunkMiddleware));\n  const createStoreWithMiddleware = bundle(createStore);\n  const store = createStoreWithMiddleware(reducers, initialState, window.devToolsExtension ? window.devToolsExtension() : f => f);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (module.hot) {\n      module.hot.accept(reducers, () => {\n        store.replaceReducer(reducers);\n      });\n    }\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/home/yasmim/Documentos/Workspace/study/redux/new-application/src/store.js"],"names":["compose","createStore","applyMiddleware","combineReducers","thunkMiddleware","addTasks","reducers","tasks","configureStore","initialState","bundle","createStoreWithMiddleware","store","window","devToolsExtension","f","process","env","NODE_ENV","module","hot","accept","replaceReducer"],"mappings":"AAAA;AACA,SACCA,OADD,EAECC,WAFD,EAGCC,eAHD,EAICC,eAJD,QAKO,OALP;AAMA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,MAAMC,QAAQ,GAAGH,eAAe,CAAC;AAC/BI,EAAAA,KAAK,EAAEF;AADwB,CAAD,CAAhC;AAIA,eAAe,SAASG,cAAT,CAAwBC,YAAxB,EAAsC;AACpD,QAAMC,MAAM,GAAGV,OAAO,CAACE,eAAe,CACrCE,eADqC,CAAhB,CAAtB;AAGA,QAAMO,yBAAyB,GAAGD,MAAM,CAACT,WAAD,CAAxC;AACA,QAAMW,KAAK,GAAGD,yBAAyB,CACtCL,QADsC,EAEtCG,YAFsC,EAGtCI,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwDC,CAAC,IAAIA,CAHvB,CAAvC;;AAMA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C,QAAIC,MAAM,CAACC,GAAX,EAAgB;AACfD,MAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkBf,QAAlB,EAA4B,MAAM;AACjCM,QAAAA,KAAK,CAACU,cAAN,CAAqBhB,QAArB;AACA,OAFD;AAGA;AACD;;AAED,SAAOM,KAAP;AACA","sourcesContent":["// Libs\nimport {\n\tcompose,\n\tcreateStore,\n\tapplyMiddleware,\n\tcombineReducers,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n// Reducers\nimport addTasks from './modules/addTasks-module';\n\nconst reducers = combineReducers({\n  tasks: addTasks,\n});\n\nexport default function configureStore(initialState) {\n\tconst bundle = compose(applyMiddleware(\n\t\tthunkMiddleware,\n\t));\n\tconst createStoreWithMiddleware = bundle(createStore);\n\tconst store = createStoreWithMiddleware(\n\t\treducers,\n\t\tinitialState,\n\t\twindow.devToolsExtension ? window.devToolsExtension() : f => f,\n\t);\n\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tif (module.hot) {\n\t\t\tmodule.hot.accept(reducers, () => {\n\t\t\t\tstore.replaceReducer(reducers);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn store;\n}\n"]},"metadata":{},"sourceType":"module"}
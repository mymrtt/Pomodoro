{"ast":null,"code":"var _jsxFileName = \"/home/yasmim/Documentos/Workspace/study/redux/new-application/src/components/Pomodoro/Pomodoro.js\";\nimport React, { Component } from 'react'; // import { bindActionCreators } from 'redux';\n\nimport { connect } from 'react-redux';\nimport './pomodoro.css';\n\nconst mapStateToProps = store => ({\n  addTasks: store.tasks.addTasks\n});\n\nconst mapDispatchToProps = dispatch => ({// addTask: (info) => {\n  //   dispatch(addTask(info));\n  // },\n});\n\nclass Pomodoro extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStart = () => {\n      const time = this.state.time;\n      setInterval(function () {\n        this.decrement(time);\n      }, 1000);\n    };\n\n    this.handlePause = () => {};\n\n    this.handleReset = () => {};\n\n    this.decrement = () => {\n      const time = this.state.time;\n\n      if (time > 0) {\n        time = time - 1;\n        console.log(time);\n      } else if (time === 0) {\n        time = 7;\n      } else {\n        clearInterval(this.running);\n        alert('5 min de descanço!!');\n      }\n    };\n\n    this.renderFormatTime = () => {\n      const time = this.state.time;\n      const minutos = Math.floor(time % 3600 / 60);\n      const segundos = Math.floor(time % 3600 % 60);\n      return minutos < 10 ? \"0\" : '' + minutos + ':' + segundos < 10 ? '0' : '' + segundos;\n    };\n\n    this.state = {\n      time: 1500,\n      control: undefined\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.renderFormatTime())), React.createElement(\"div\", {\n      id: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handlePause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pomodoro);","map":{"version":3,"sources":["/home/yasmim/Documentos/Workspace/study/redux/new-application/src/components/Pomodoro/Pomodoro.js"],"names":["React","Component","connect","mapStateToProps","store","addTasks","tasks","mapDispatchToProps","dispatch","Pomodoro","constructor","props","handleStart","time","state","setInterval","decrement","handlePause","handleReset","console","log","clearInterval","running","alert","renderFormatTime","minutos","Math","floor","segundos","control","undefined","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport './pomodoro.css';\n\nconst mapStateToProps = (store) => ({\n  addTasks: store.tasks.addTasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // addTask: (info) => {\n  //   dispatch(addTask(info));\n  // },\n});\n\nclass Pomodoro extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      time: 1500,\n      control: undefined,\n    };\n  }\n\n  handleStart = () => {\n    const { time } = this.state;\n    setInterval(function () {\n      this.decrement(time);\n    }, 1000);\n  }\n\n  handlePause = () => {\n\n  }\n\n  handleReset = () => {\n\n  }\n\n  decrement = () => {\n    const { time } = this.state;\n\n    if(time > 0) {\n      time = time -1;\n      console.log(time)\n    }\n    else if(time === 0){\n      time = 7;\n    }\n    else{\n      clearInterval(this.running);\n      alert('5 min de descanço!!');\n    }\n  }\n\n  renderFormatTime = () => {\n    const { time } = this.state;\n    const minutos = Math.floor(time % 3600 / 60);\n    const segundos = Math.floor(time % 3600 % 60);\n\n    return minutos < 10 ? \"0\" : '' + minutos + ':' + segundos < 10 ? '0' : '' + segundos\n  }\n\n  render() {\n    return (\n      <div className=\"Todo\">\n        <div>\n          <span>{this.renderFormatTime()}</span> \n        </div>\n        <div id=\"buttons\">\n          <button \n            className=\"btn\"\n            onClick={this.handleStart}\n          >\n          Start\n          </button>\n          <button\n            className=\"btn\"\n            onClick={this.handlePause}\n          >\n          Pause\n          </button>\n          <button \n            className=\"btn\"\n            onClick={this.handleReset}\n          >\n          Reset\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pomodoro);\n"]},"metadata":{},"sourceType":"module"}